---

- name: Ubuntu-only tasks
  include_tasks: ubuntu.yml
  tags: ubuntu

- name: Manjaro-only tasks
  include_tasks: manjaro.yml
  tags: manjaro

- name: User config
  file:
    path: "{{ config_dir }}"
    state: directory

- name: Local bin
  file:
    path: "{{ ansible_env.HOME + '/.local/bin' }}"
    state: directory
    recurse: true


- name: Install packages
  become: yes
  package:
    state: latest
    name:
      - git-lfs
      - vim
      - curl
      - httpie
      - jq
      - htop
      - tree
      - multitail
      - powerline
      - pass

      # Networking
      - net-tools
      - nmap
      - openvpn

      # Jokes
      - cowsay
      - lolcat
      - figlet

      # I18n
      - gettext

      # Other packages
      - yamllint
      - kubectl
      - signal-desktop

      # Audio
      - mplayer

- name: Install bigger apps
  become: yes
  package:
    state: latest
    name:
      - gimp
      - pandoc
      - virtualbox

- name: Check for Stack
  # We need this command not to *fail*, but `which` does...
  shell: which stack >/dev/null && which stack || true
  register: which_stack

- name: Download Stack script
  get_url:
    url: https://get.haskellstack.org/
    dest: /tmp/install-stack.sh
    force: yes
  when: which_stack.stdout|length < 1

- name: Install Stack
  become: yes
  script: /tmp/install-stack.sh
  when: which_stack.stdout|length < 1

- name: Install GHC with Stack
  command: "{{which_stack.stdout}} setup"
  when: which_stack.stdout|length > 1

- name: Download Terraform
  get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
    dest: "/tmp/terraform-{{terraform_version}}.zip"
    force: yes

- name: Install Terraform
  unarchive:
    src: "/tmp/terraform-{{terraform_version}}.zip"
    dest: "{{ ansible_env.HOME + '/.local/bin' }}"

# These don't seem to work from the Galaxy role (but definitely not a bug, I checked)
- name: Create Tmux plugin directory
  file:
    dest: "{{ tmux_plugin_dir }}"
    state: directory

- name: Install Tmux plugins
  git:
    repo: "{{ item['repo'] }}"
    dest: "{{ tmux_plugin_dir }}/{{ item['name'] }}"
    version: "{{ item['version'] }}"
    force: yes
  with_items:
    - "{{ tmux_plugins }}"

