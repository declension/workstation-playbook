---
- name: User config
  file:
    path: "{{ config_dir }}"
    state: directory

- name: Local bin
  file:
    path: "{{ ansible_env.HOME + '/.local/bin' }} "
    state: directory
    recurse: true

- name: Add Yarn GPG key
  become: true
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Add Yarn repo
  become: true
  apt_repository:
    repo: deb https://dl.yarnpkg.com/debian/ stable main
    state: present
    filename: yarn

- name: Add Kubernetes Key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Kubernetes repo
  become: true
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main

- name: Add Oracle Java repo
  become: true
  apt_repository:
    repo: "ppa:linuxuprising/java"
    state: present
    filename: linuxuprising

- name: Accept Oracle License
  become: true
  shell: echo "oracle-java11-installer shared/accepted-oracle-license-v1-2 select true" | debconf-set-selections

- name: Install packages
  become: yes
  apt:
    update_cache: true
    name:
    - curl
    - python3-pip
    - python3-venv
    - pandoc
    - htop
    - net-tools
    - tree
    - jq
    - httpie
    - cowsay
    - lolcat
    - toilet
    - ubuntu-restricted-extras
    - powerline
    - gnome-tweaks
    - fonts-powerline
    - yamllint
    - kubectl

- name: Add Oracle Java 11
  become: true
  apt:
    name: oracle-java11-installer
    state: present
  when: jdk11_dir is not exists

# TODO: wait for Ansible 2.8 and snap command
- name: Install Slack via Snap
  become: yes
  command: snap install --classic slack
  when: lookup('env','CI') == ""

- name: Install gcloud Snap
  become: yes
  command: snap install --classic google-cloud-sdk
  when: lookup('env','CI') == ""

- name: Set up Python tooling
  command: python3 -m pip install --user --upgrade pip

- name: Add Python Poetry & AWS CLI
  command: python3 -m pip install --user poetry awscli

- name: Install latest Haskell Stack (and GCC, cpp, libc, perl etc)
  shell: which stack || curl -sSL https://get.haskellstack.org/ | sh
  when: stack is not exists

- name: Install GHC etc
  command: "{{ stack }} setup"

- name: Download Node.JS 10 Repo script
  become: yes
  get_url:
     url: https://deb.nodesource.com/setup_10.x
     dest: /tmp/set-up-node-10.sh
     force: yes
     mode: ug+rx

- name: Set up Node repo
  become: true
  script: /tmp/set-up-node-10.sh

- name: Install Node JS
  become: true
  apt:
    name: nodejs

- name: Download Rust install script
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rustup.sh
    force: yes
    mode: ug+x

- name: Install Rust
  script: /tmp/rustup.sh -y

- name: Download Terraform
  get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
    dest: /tmp/terraform.zip
    force: yes

- name: Install Terraform
  unarchive:
    dest: /usr/local/bin
    src: /tmp/terraform.zip
