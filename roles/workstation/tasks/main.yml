---
- name: User config
  file:
    path: "{{ config_dir }}"
    state: directory

- name: Local bin
  file:
    path: "{{ ansible_env.HOME + '/.local/bin' }}"
    state: directory
    recurse: true

- name: Install gpg
  become: yes
  apt:
    update_cache: true
    name: gpg

- name: Add Yarn GPG key
  become: true
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Add Yarn repo
  become: true
  apt_repository:
    repo: deb https://dl.yarnpkg.com/debian/ stable main
    state: present
    filename: yarn

- name: Add Kubernetes Key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Kubernetes repo
  become: true
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main

- name: Get Signal key
  get_url:
    url: https://updates.signal.org/desktop/apt/keys.asc
    dest: /tmp/signal-key.asc
    force: yes

- name: Convert Signal key
  shell:
    gpg --dearmor -o /tmp/signal-desktop-keyring.gpg /tmp/signal-key.asc && rm /tmp/signal-key.asc

- name: Install Signal GPG key
  become: true
  copy:
    src: /tmp/signal-desktop-keyring.gpg
    dest: /usr/share/keyrings/signal-desktop-keyring.gpg
    force: true

- name: Add Signal repo
  become: true
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main"
    state: present
    filename: signal-xenial

- name: Install packages
  become: yes
  apt:
    update_cache: true
    name:
      - python3-pip
      - python3-openssl
      - "openjdk-{{ openjdk_version }}-jdk"
      - git-lfs
      - vim
      - curl
      - httpie
      - jq
      - htop
      - tree
      - multitail
      - powerline
      - fonts-powerline
      - pass

      # Networking
      - net-tools
      - nmap
      - openvpn

      # Ubuntu / Gnome utils
      - ubuntu-restricted-extras
      - gnome-tweaks
      - nautilus-image-converter
      - network-manager-openvpn-gnome

      # Jokes
      - cowsay
      - lolcat
      - toilet

      # Compiling tools
      - libbz2-dev
      - llvm
      - libffi-dev
      - cmake

      # Rust / Alacritty things
      - libssl-dev
      - libcairo2-dev
      - pkg-config
      - libfreetype6-dev
      - libfontconfig1-dev
      - libxcb-xfixes0-dev

      # I18n
      - gettext
      - potool

      # Other packages
      - yamllint
      - kubectl
      - signal-desktop

      # Audio
      - mplayer
      - gstreamer1.0-plugins-bad

- name: Install bigger apps
  become: yes
  apt:
    name:
      - gimp
      - pandoc
      - virtualbox

- name: Install Slack, Noson via Snap
  snap:
    classic: true
    name:
      - slack
      - noson
      - yq
  become: true
  when: lookup('env','CI') == ""

- name: Add Python Poetry & AWS CLI
  command: python3 -m pip install --user poetry awscli

- name: Check for Stack
  # We need this command not to *fail*, but `which` does...
  shell: which stack >/dev/null && which stack || true
  register: which_stack

- name: Download Stack script
  get_url:
    url: https://get.haskellstack.org/
    dest: /tmp/install-stack.sh
    force: yes
  when: which_stack.stdout|length < 1

- name: Install Stack
  script: /tmp/install-stack.sh
  when: which_stack.stdout|length < 1

- name: Install GHC with Stack
  command: "{{which_stack.stdout}} setup"
  when: which_stack.stdout|length > 1

- name: Download Node.JS Repo script
  become: yes
  get_url:
    url: "https://deb.nodesource.com/setup_{{node_version}}.x"
    dest: /tmp/set-up-node.sh
    force: yes
    mode: ug+rx

- name: Set up Node repo
  become: true
  script: /tmp/set-up-node.sh

- name: Install Node JS
  become: true
  apt:
    name: nodejs

- name: Download Terraform
  get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
    dest: /tmp/terraform.zip
    force: yes

# These don't seem to work from the Galaxy role (but definitely not a bug, I checked)
- name: Create Tmux plugin directory
  file:
    dest: "{{ tmux_plugin_dir }}"
    state: directory

- name: Install Tmux plugins
  git:
    repo: "{{ item['repo'] }}"
    dest: "{{ tmux_plugin_dir }}/{{ item['name'] }}"
    version: "{{ item['version'] }}"
    force: yes
  with_items:
    - "{{ tmux_plugins }}"

